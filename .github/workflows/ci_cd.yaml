#Key Difference Summary:
#GitHub Actions: Uses a jobs: wrapper under which all individual jobs are defined. Stages are implicitly handled by separate jobs and their needs: dependencies.
#GitLab CI/CD: Uses a stages: top-level definition, and then individual jobs are defined as top-level keys, with each job explicitly declaring which stage: it belongs to.

# this example is github actions one

name: CI CD Pipeline # The name of your workflow

on: # Defines when the workflow runs
  push:
    branches:
      - master # Runs when code is pushed to the 'master' branch

  workflow_dispatch: # Allows manual triggering of the workflow

jobs: # This is where your "stages" (or logical groups of steps) are defined
  build: # This is a single job. In this workflow, it acts as your "build stage."
    runs-on: ubuntu-latest # Specifies the runner environment for this job.
    steps: # A sequence of commands or actions to be executed within the 'build' job.
      - name: checkout # Step 1: Check out the code.
        uses: actions/checkout@v4

      - name: 'install python' # Step 2: Set up Python.
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: 'install dependencies' # Step 3: Install Python dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: test
        run: |
          pytest test.py

      - name: 'Docker build' # Step 4: Build the Docker image.
        if: success()
        run: |
          docker build -t new_img .

